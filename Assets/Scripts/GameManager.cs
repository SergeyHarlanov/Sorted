using UnityEngine;
using System;
using Zenject; // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å!

public class GameManager : MonoBehaviour
{
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π Instance (—Å–∏–Ω–≥–ª—Ç–æ–Ω) –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–∞.
    // Zenject-–∏–Ω—ä–µ–∫—Ü–∏–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
    public static GameManager Instance { get; private set; } 

    // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–≥—Ä—ã.
    private GameSettings _gameSettings; 

    // –ü—É–±–ª–∏—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è UI –∏ –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
    public event Action<int> OnScoreChanged;
    public event Action<int> OnLivesChanged;
    public event Action<int> OnGameOver;
    public event Action<int> OnGameWin;

    // –ü—É–±–ª–∏—á–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å—á–µ—Ç–∞, –∂–∏–∑–Ω–µ–π –∏ –∑–∞–∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–ª–∏ –ø–æ–±–µ–¥—ã
    public int CurrentLives { get; private set; }
    public int CurrentScore { get; private set; }
    
    // –ó–∞–∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–≥—É—Ä, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–±–µ–¥—ã. 
    public int FiguresRequiredToWin { get; private set; } 

    /// <summary>
    /// –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Zenject.
    /// Zenject –≤—ã–∑—ã–≤–∞–µ—Ç –µ–≥–æ, –∫–æ–≥–¥–∞ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤—ã.
    /// </summary>
    [Inject]
    public void Construct(GameSettings gameSettings)
    {
        _gameSettings = gameSettings;
        Debug.Log("GameSettings —É—Å–ø–µ—à–Ω–æ –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ GameManager.");

        // üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –∏–Ω—ä–µ–∫—Ü–∏–π üî•
        // –≠—Ç–æ –º–µ—Å—Ç–æ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç _gameSettings
        InitializeGameData(); 
    }

    /// <summary>
    /// –ú–µ—Ç–æ–¥ Awake –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–ø—Ç–∞.
    /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏–Ω–≥–ª—Ç–æ–Ω–∞.
    /// </summary>
    private void Awake()
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä GameManager
        if (Instance == null)
        {
            Instance = this; // –ï—Å–ª–∏ –Ω–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç—Ç–æ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–∫ Instance
            // DontDestroyOnLoad(gameObject); // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ GameManager –¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –º–µ–∂–¥—É —Å—Ü–µ–Ω–∞–º–∏
        }
        else
        {
            // –ï—Å–ª–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–Ω–∏—á—Ç–æ–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
            Destroy(gameObject);
        }
        
        // –í–ê–ñ–ù–û: –ù–∞ —ç—Ç–∞–ø–µ Awake() Zenject –µ—â–µ –ù–ï –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, _gameSettings) –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã.
        // –ü–æ—ç—Ç–æ–º—É –æ—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ Construct() –∏–ª–∏ –º–µ—Ç–æ–¥–µ, –≤—ã–∑—ã–≤–∞–µ–º–æ–º –∏–∑ –Ω–µ–≥–æ.
    }

    /// <summary>
    /// –û—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
    /// –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ —á–∏—â–µ –∏ —Ä–∞–∑–¥–µ–ª—è–µ—Ç –∏–Ω—ä–µ–∫—Ü–∏—é –æ—Ç –ª–æ–≥–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
    /// </summary>
    private void InitializeGameData()
    {
        if (_gameSettings == null)
        {
            Debug.LogError("–û—à–∏–±–∫–∞: GameSettings –Ω–µ –±—ã–ª –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –≤ GameManager. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à GameInstaller!");
            enabled = false; 
            return;
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ü–µ–ª—å –¥–ª—è –ø–æ–±–µ–¥—ã –û–î–ò–ù –†–ê–ó –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏–≥—Ä—ã
        FiguresRequiredToWin = _gameSettings.GetRandomFiguresToWin();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        CurrentLives = _gameSettings.PlayerStartingHealth;
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç
        CurrentScore = 0;

        Debug.Log($"–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: {CurrentLives}");
        Debug.Log($"–î–ª—è –ø–æ–±–µ–¥—ã –Ω—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–≥—É—Ä: {FiguresRequiredToWin}"); 

        // –û–ø–æ–≤–µ—â–∞–µ–º UI –∏ –¥—Ä—É–≥–∏–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –æ–± –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö
        OnLivesChanged?.Invoke(CurrentLives); 
        OnScoreChanged?.Invoke(CurrentScore); 
    }

    /// <summary>
    /// –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç –∏–≥—Ä–æ–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ –ø–æ–±–µ–¥—ã.
    /// </summary>
    public void AddScore()
    {
        CurrentScore++;
        Debug.Log("Score: " + CurrentScore);
        OnScoreChanged?.Invoke(CurrentScore); // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ª–∏ —Ü–µ–ª—å –ø–æ–±–µ–¥—ã
        if (CurrentScore >= FiguresRequiredToWin) 
        {
            GameWin();
        }
    }

    /// <summary>
    /// –£–º–µ–Ω—å—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–µ–π –∏–≥—Ä–æ–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è.
    /// </summary>
    public void LoseLife()
    {
        CurrentLives--;
        Debug.Log("Lives left: " + CurrentLives);
        OnLivesChanged?.Invoke(CurrentLives); // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ª–∏ –∂–∏–∑–Ω–∏
        if (CurrentLives <= 0)
        {
            GameOver();
        }
    }

    /// <summary>
    /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞".
    /// </summary>
    private void GameOver()
    {
        Debug.Log("Game Over! Final Score: " + CurrentScore);
        OnGameOver?.Invoke(CurrentScore); // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è:
        // - –ü–∞—É–∑—ã –∏–≥—Ä—ã
        // - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ "Game Over"
        // - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∫–æ—Ä–¥–æ–≤
        // - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å—Ü–µ–Ω—ã
    }

    /// <summary>
    /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–ò–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª".
    /// </summary>
    private void GameWin()
    {
        Debug.Log("You Win! Final Score: " + CurrentScore);
        OnGameWin?.Invoke(CurrentScore); // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è:
        // - –ü–∞—É–∑—ã –∏–≥—Ä—ã
        // - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ "–ü–æ–±–µ–¥–∞"
        // - –ü–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å
    }
}